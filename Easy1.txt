//Given the head of a singly linked list, return the middle node of the linked list.
//If there are two middle nodes, return the second middle node.
/*
Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.
*/

 
class Solution {
    public ListNode middleNode(ListNode head) {
      int length = 1;
        ListNode current = head;
        while(current.next != null) {
            current = current.next;
            length++;
        }
        
        int middle = length / 2;
        current = head;
        int i = 0;
        while(i < middle) {
            current = current.next;
            i++;
        }
        
        return current  ;
            
    }
}
